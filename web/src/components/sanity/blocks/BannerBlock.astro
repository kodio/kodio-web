---
import ButtonLink from '@components/ButtonLink.astro';
import BlockContent from '@components/sanity/BlockContent.astro';
import Image from '@components/sanity/Image.astro';
import type { Props as PortableTextProps } from 'astro-portabletext/types';
import type { Banner } from '@lib/sanity';

export type Props = PortableTextProps<Banner>;

const { node } = Astro.props;

const link = node.links?.[0];

const imgColumns = node.textPosition === 'left' ? '2 / 3' : '1 / 2';
const textColumns = node.textPosition === 'left' ? '1 / 2' : '2 / 3';
---

<div class:list={['banner', Astro.props.class]}>
  <div>
    <h2>{node.heading}</h2>
    <BlockContent value={node.body} />
    {link && <ButtonLink link={link} color={node.linkColor} />}
  </div>
  {
    node.image && (
      <Image
        class="banner-image"
        image={node.image}
        sizes="(min-width: 1520px) 440px, (min-width: 1280px) calc(14.55vw + 222px), (min-width: 1040px) calc(50vw - 160px), (min-width: 780px) calc(50vw - 64px), calc(100vw - 48px)"
      />
    )
  }
</div>

<style lang="scss" define:vars={{ imgColumns, textColumns }}>
  .banner {
    display: grid;
    grid-auto-flow: column;
    align-items: center;
    gap: 2rem;

    &:has(+ *) {
      margin-bottom: 2rem;
    }

    @media (min-width: $width-m) {
      gap: 5rem;
      grid-template-columns: 1fr 1fr;
    }

    @media (min-width: $width-l) {
      gap: 10rem;
    }

    @media (min-width: $width-xl) {
      gap: 19rem;
    }

    > div {
      display: grid;
      gap: 1rem;
      grid-column: 1 / -1;

      @media (min-width: $width-m) {
        grid-column: var(--textColumns);
      }
    }

    .banner-image {
      grid-column: 1 / -1;

      @media (min-width: $width-m) {
        grid-column: var(--imgColumns);
      }

      @media (max-width: $width-m) {
        aspect-ratio: 1;
      }
    }
  }
</style>
