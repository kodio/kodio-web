---
import { PortableText } from 'astro-portabletext';
import SectionLayout from '@layouts/SectionLayout.astro';
import AccordionBlock from './blocks/AccordionBlock.astro';
import ArticleBlock from './blocks/ArticleBlock.astro';
import BannerBlock from './blocks/BannerBlock.astro';
import BannerLinkGroupBlock from './blocks/BannerLinkGroupBlock.astro';
import EmployeeCardsBlock from './blocks/EmployeeCardsBlock.astro';
import HandbookBlock from './blocks/HandbookBlock.astro';
import type { CommonBlockReference, Section, SectionContent } from '@lib/sanity';

export type Props = {
  sections?: Section[] | undefined;
};

function isCommonBlockReference(
  content: SectionContent | CommonBlockReference
): content is CommonBlockReference {
  return content._type === 'reference';
}

function getSectionContent(section?: Section) {
  return (
    section?.content?.flatMap((s) => (isCommonBlockReference(s) ? s.commonBlock ?? [] : s)) ?? []
  );
}

const { sections } = Astro.props;
---

{
  sections?.map((section) => (
    <SectionLayout color={section.color} heading={section.heading}>
      <PortableText
        value={getSectionContent(section)}
        components={{
          type: {
            accordion: AccordionBlock,
            article: ArticleBlock,
            banner: BannerBlock,
            bannerLinkGroup: BannerLinkGroupBlock,
            employeeCards: EmployeeCardsBlock,
            handbook: HandbookBlock,
          },
        }}
      />
    </SectionLayout>
  ))
}
